default_platform(:ios)

platform :ios do
  before_all do
    if is_ci?
      setup_circle_ci
      skip_docs
    end
  end

  desc "Build framework and run tests"
  lane :test do
    scan(
      output_directory: "./output/scan",
      result_bundle: true,
      output_types: "junit",
      device: "iPhone 12",
      scheme: "PayoneerCheckout",
      package_path: "."
    )
  end

  desc "Build example app (Swift)"
  lane :build_example_swift do |options|
    build_ios_app(
      silent: true,
      export_method: "ad-hoc",
      scheme: "Swift",
      project: "./ExampleCheckout/ExampleCheckout.xcodeproj",
      output_name: options[:binary]
    )
  end

  desc "Build example app (Swift)"
  lane :build_example_swift_cocoapods do |options|
    build_ios_app(
      silent: true,
      export_method: "development",
      scheme: "Swift for CocoaPods",
      workspace: "./ExampleCheckout/ExampleCheckout.xcworkspace"
    )
  end

  desc "Upload binary to Browserstack"
  lane :browserstack do |options|
    upload_to_browserstack_app_live(
      browserstack_username: ENV["BROWSERSTACK_USER"],
      browserstack_access_key: ENV["BROWSERSTACK_KEY"],
      file_path: options[:binary]
    )
  end

  desc "Run UI tests"
  lane :ui_test do |options|
    run_tests(
      scheme: options[:scheme],
      derived_data_path: "/tmp/workspace/derived_data",
      project: "ExampleCheckout/ExampleCheckout.xcodeproj",
      concurrent_workers: 1,
      ensure_devices_found: true,
      number_of_retries: 1,
      output_directory: "./output/scan",
      output_types: "junit",
      result_bundle: true
    )
  end

  desc "Submit to TestFlight"
  lane :submit_to_testflight do
    checkout_ipa = "/tmp/workspace/output/ExampleCheckout-" + ENV["CIRCLE_BRANCH"].to_s + ".ipa"
    certificate_json = "certificates/itunes_connect/fastlane_api_key.json"
    upload_to_testflight(
      api_key_path: certificate_json,
      ipa: checkout_ipa
    )
  end

  desc "Change version number"
  lane :set_version do |options|
    increment_version_number(version_number: options[:version])
    increment_version_number(version_number: options[:version], xcodeproj: "ExampleCheckout/ExampleCheckout.xcodeproj")
    version_bump_podspec(version_number: options[:version], path: "PayoneerCheckout.podspec")
  end

  desc "Validate framework for CocoaPods"
  lane :lib_lint do
    pod_lib_lint(allow_warnings: true)
  end

  desc "Deploy"
  lane :deploy do
    ensure_git_status_clean()

    version_number = get_version_number()
    add_git_tag(tag: version_number)
    push_git_tags()

    pod_lib_lint(allow_warnings: true)
    pod_push(allow_warnings: true)
  end
end
