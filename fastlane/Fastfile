example_xcodeproj = "ExampleCheckout/ExampleCheckout.xcodeproj"

default_platform(:ios)

platform :ios do
  before_all do
    if is_ci?
      setup_circle_ci
      skip_docs
    end
  end

  desc "Build framework and run tests"
  lane :test do
    scan(
      output_directory: "./output/scan",
      result_bundle: true,
      output_types: "junit"
    )
  end

  desc "Build example app (Swift)"
  lane :build_example_swift do |options|
    build_ios_app(
      silent: true,
      export_method: "ad-hoc",
      scheme: "Swift",
      workspace: "./ExampleCheckout/ExampleCheckout.xcworkspace",
      output_name: options[:binary]
    )
  end

  desc "Upload binary to Browserstack"
  lane :browserstack do |options|
    upload_to_browserstack_app_live(
      browserstack_username: ENV["BROWSERSTACK_USER"],
      browserstack_access_key: ENV["BROWSERSTACK_KEY"],
      file_path: options[:binary]
    )
  end

  desc "Run UI tests"
  lane :ui_test do |options|
    run_tests(
      scheme: options[:scheme],
      derived_data_path: "/tmp/workspace/derived_data",
      workspace: "ExampleCheckout/ExampleCheckout.xcworkspace",
      devices: ["iPhone 12"],
      output_directory: "./output/scan",
      output_types: "junit",
      max_concurrent_simulators: 2,
      result_bundle: true
    )
  end

  desc "Submit to TestFlight"
  lane :submit_to_testflight do
    example_ipa = "/tmp/workspace/output/ExampleCheckout-" + ENV["CIRCLE_BRANCH"].to_s + ".ipa"
    certificate_json = "certificates/itunes_connect/fastlane_api_key.json"
    upload_to_testflight(
      api_key_path: certificate_json,
      ipa: example_ipa
    )
  end

  desc "Change version number"
  lane :set_version do |options|
    increment_version_number(version_number: options[:version])
    increment_version_number(version_number: options[:version], xcodeproj: example_xcodeproj)
    version_bump_podspec(version_number: options[:version], path: "PayoneerCheckout.podspec")
  end

  desc "Validate framework for CocoaPods"
  lane :lib_lint do
    pod_lib_lint(allow_warnings: true)
  end

  desc "Deploy"
  lane :deploy do
    pod_lib_lint(allow_warnings: true)
    pod_push(allow_warnings: true)
  end
end