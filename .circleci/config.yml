version: 2.1
jobs:
  build_example_swift:
    macos:
      xcode: 12.5.1
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          key: example-cocoapods-{{ checksum "ExampleCheckout/Podfile.lock" }}
      - run:
          name: Fastlane
          command: bundle exec fastlane build_example_swift
      - store_test_results:
          path: output/scan
      - save_cache:
          key: example-cocoapods-{{ checksum "ExampleCheckout/Podfile.lock" }}
          paths:
            - ExampleCheckout/Pods
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - derived_data
            - output

  ui_test:
    macos:
      xcode: 12.5.1
    parameters:
      xcode_scheme:
        type: enum
        enum: ["Swift", "Objective-C"]
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          key: example-cocoapods-{{ checksum "ExampleCheckout/Podfile.lock" }}
      - run:
          name: Inject env variables
          command: |
            echo "MERCHANT_PAYMENT_TOKEN=$MERCHANT_PAYMENT_TOKEN" > ExampleCheckout/UITests/Assets/Config.xcconfig
            echo "MERCHANT_CODE=$MERCHANT_CODE" >> ExampleCheckout/UITests/Assets/Config.xcconfig
      - run:
          name: UI tests
          command: bundle exec fastlane ui_test scheme:<< parameters.xcode_scheme >>
      - save_cache:
          key: example-cocoapods-{{ checksum "ExampleCheckout/Podfile.lock" }}
          paths:
            - ExampleCheckout/Pods
      - store_test_results:
          path: output/scan
      - run:
          name: Zip xcresult
          command: zip -r output/scan/checkout.xcresult.zip output/scan/ExampleCheckout.xcresult/
          when: on_fail
      - store_artifacts:
          path: output/scan/checkout.xcresult.zip
          when: on_fail
  
  browserstack:
    macos:
      xcode: 12.5.1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - attach_workspace:
          at: /tmp/workspace
      - run: bundle exec fastlane browserstack

  lib_lint:
    macos:
      xcode: "12.1.0"
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: CocoaPods validation
          command: bundle exec fastlane lib_lint

  deploy:
    macos:
      xcode: 12.5.1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Deploy
          command: bundle exec fastlane deploy

  submit_to_testflight:
    macos:
      xcode: 12.5.1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run: git clone --single-branch --branch ios-sdk --depth 1 https://github.com/optile/opx-mobiledev-certificates.git certificates
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - attach_workspace:
          at: /tmp/workspace
      - run: bundle exec fastlane submit_to_testflight

  swiftlint:
    macos:
      xcode: 12.5.1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane run cocoapods
      - run:
          name: Lint framework
          command: Pods/SwiftLint/swiftlint --reporter emoji --quiet --strict
      - run:
          name: Lint Example app
          command: Pods/SwiftLint/swiftlint --config ExampleCheckout/.swiftlint.yml --reporter emoji --quiet --strict

workflows:
  # Workflow for manual testing
  qa:
    jobs:
      - request_qa:
          type: approval
          filters:
            branches:
              only: /.*PCX-.*/
      - build_example_swift:
          requires:
            - request_qa
      - browserstack:
          requires:
            - build_example_swift
            - request_qa

  # Automated tests workflow
  test:
    jobs:
      - swiftlint:
          filters:
            branches:
              only: /.*PCX-.*/
      - ui_test:
          filters:
            branches:
              only: /.*PCX-.*/
          matrix:
            parameters:
              xcode_scheme: ["Swift", "Objective-C"]
      - lib_lint:
          filters:
            branches:
              only: develop

# Submit to TestFlight, only for commits in develop branch
  # testflight:
  #   jobs:
  #     - build_example:
  #         filters:
  #           branches:
  #             only:
  #               - develop
  #     - submit_to_testflight:
  #         requires: 
  #           - build_example
  #         filters:
  #           branches:
  #             only:
  #               - develop

  # Deploy to CocoaPods
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only:
                - master
