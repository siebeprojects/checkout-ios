name: Tests

on:
  push:
    branches-ignore: master

concurrency:
  group: tests-${{ github.ref_name }}
  cancel-in-progress: true

jobs:

### UNIT TESTS

  unit-tests:
    name: Unit
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install the dependencies specified in Gemfile
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Run unit tests
        env:
          FASTLANE_SKIP_UPDATE_CHECK: true
        run: bundle exec fastlane test

      - name: Zip test results
        if: failure()
        env:
          project-name: PayoneerCheckout
        run: zip -r output/scan/${{ github.sha }}.xcresult.zip output/scan/${{ env.project-name }}.xcresult/

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}.xcresult.zip
          path: output/scan/${{ github.sha }}.xcresult.zip/
          if-no-files-found: error
          retention-days: 5

### UI TESTS

  ui-tests-single-device:
    if: github.ref != 'refs/heads/develop'
    name: UI
    uses: ./.github/workflows/ui_tests.yml
    with:
      install-simulators-command: >-
        sudo ln -s $XCODE_12_DEVELOPER_DIR/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 14.5.simruntime
    secrets:
      MOBILE_MERCHANT_CODE: ${{ secrets.MOBILE_MERCHANT_CODE }}
      MOBILE_MERCHANT_PAYMENT_TOKEN: ${{ secrets.MOBILE_MERCHANT_PAYMENT_TOKEN }}

  ui-tests-multiple-devices:
    if: github.ref == 'refs/heads/develop'
    name: UI
    uses: ./.github/workflows/ui_tests.yml
    with:
      schemes: '["Swift", "Objective-C"]'
      simulators: '["iPhone 13 (15.2)", "iPhone 12 (14.5)", "iPhone 11 (13.7)"]'
      install-simulators-command: >-
        sudo ln -s $XCODE_12_DEVELOPER_DIR/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 14.5.simruntime && 
        sudo ln -s $XCODE_11_DEVELOPER_DIR/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.7.simruntime
    secrets:
      MOBILE_MERCHANT_CODE: ${{ secrets.MOBILE_MERCHANT_CODE }}
      MOBILE_MERCHANT_PAYMENT_TOKEN: ${{ secrets.MOBILE_MERCHANT_PAYMENT_TOKEN }}

### SWIFT LINT

  swiftlint:
    name: Linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint the framework
        uses: norio-nomura/action-swiftlint@3.2.1
        with:
          args: --strict

      - name: Lint example applications
        uses: norio-nomura/action-swiftlint@3.2.1
        env:
          WORKING_DIRECTORY: ExampleCheckout
        with:
          args: --strict

### COCOAPODS

  cocoapods-integration:
    name: CocoaPods Integration
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install the dependencies specified in Gemfile
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Install Pods
        env:
          project-directory: ExampleCheckout/
        run: bundle exec pod install --deployment --project-directory=${{ env.project-directory }}

      - name: Inject secrets
        id: inject-secrets
        env:
          merchant-code: ${{ secrets.MOBILE_MERCHANT_CODE }}
          merchant-token: ${{ secrets.MOBILE_MERCHANT_PAYMENT_TOKEN }}
          payment-api-list-url: https:/\$()/api.pi-nightly.integration.oscato.com/api/lists
          xcconfig: ExampleCheckout/UITests/Resources/Config.xcconfig
        run: |
            echo "MERCHANT_CODE=${{ env.merchant-code }}" > ${{ env.xcconfig }}
            echo "MERCHANT_PAYMENT_TOKEN=${{ env.merchant-token }}" >> ${{ env.xcconfig }}
            echo "PAYMENT_API_LISTURL=${{ env.payment-api-list-url }}" >> ${{ env.xcconfig }}

      - name: Run UI tests
        env:
          FASTLANE_SKIP_UPDATE_CHECK: true
        run: bundle exec fastlane ui_test_cocoapods

      - name: Clear secrets
        if: always() && steps.inject-secrets.outcome == 'success'
        id: clear-secrets
        env:
          xcconfig: ExampleCheckout/UITests/Resources/Config.xcconfig
        run: rm ${{ env.xcconfig }}
