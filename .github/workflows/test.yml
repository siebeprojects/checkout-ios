name: Automated tests

on:
  push:
    branches:
      - PCX-2120-github-actions
  pull_request:
    branches:
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency: 
  group: tests-${{ github.head_ref }}
  cancel-in-progress: true

jobs:

### UNIT TESTS

  unit-tests:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install the dependencies specified in Gemfile
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Cache pods
        id: cache-pods
        uses: actions/cache@v2
        env:
          cache-name: framework-pods
        with:
          path: Pods/
          key: cache-${{ env.cache-name }}-${{ hashFiles('Podfile.lock') }}

      - name: Install Pods
        if: steps.cache-pods.outputs.cache-hit != 'true'
        run: bundle exec pod install --deployment

      - name: Run unit tests
        env:
          FASTLANE_SKIP_UPDATE_CHECK: true
        run: bundle exec fastlane test

      - name: Zip test results
        if: failure()
        env:
          project-name: PayoneerCheckout
        run: zip -r output/scan/${{ github.sha }}.xcresult.zip output/scan/${{ env.project-name }}.xcresult/

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}.xcresult.zip
          path: output/scan/${{ github.sha }}.xcresult.zip/
          if-no-files-found: error
          retention-days: 5

### UI TESTS

  ui-tests:
    runs-on: macos-latest
    strategy:
      matrix:
        scheme: [Swift, Objective-C]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install the dependencies specified in Gemfile
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Cache pods
        id: cache-pods
        uses: actions/cache@v2
        env:
          cache-name: example-app-pods
        with:
          path: ExampleCheckout/Pods/
          key: cache-${{ env.cache-name }}-${{ hashFiles('ExampleCheckout/Podfile.lock') }}

      - name: Install Pods
        if: steps.cache-pods.outputs.cache-hit != 'true'
        env:
          project-directory: ExampleCheckout/
        run: bundle exec pod install --deployment --project-directory=${{ env.project-directory }}

      - name: Inject secrets
        env:
          merchant-code: ${{ secrets.MOBILE_MERCHANT_CODE }}
          merchant-token: ${{ secrets.MOBILE_MERCHANT_PAYMENT_TOKEN }}
          payment-api-list-url: https:/\$()/api.integration.oscato.com/api/lists
          xcconfig: ExampleCheckout/UITests/Assets/Config.xcconfig
        run: |
            echo "MERCHANT_CODE=${{ env.merchant-code }}" > ${{ env.xcconfig }}
            echo "MERCHANT_PAYMENT_TOKEN=${{ env.merchant-token }}" >> ${{ env.xcconfig }}
            echo "PAYMENT_API_LISTURL=${{ env.payment-api-list-url }}" >> ${{ env.xcconfig }}

      - name: Run UI tests
        env:
          FASTLANE_SKIP_UPDATE_CHECK: true
        run: bundle exec fastlane ui_test scheme:${{ matrix.scheme }}

      - name: Clear secrets
        env:
          xcconfig: ExampleCheckout/UITests/Assets/Config.xcconfig
        run: rm -f ${{ env.xcconfig }}

      - name: Zip test results
        if: failure()
        env:
          project-name: ExampleCheckout
        run: zip -r output/scan/${{ github.sha }}.xcresult.zip output/scan/${{ env.project-name }}.xcresult/

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}.xcresult.zip
          path: output/scan/${{ github.sha }}.xcresult.zip/
          if-no-files-found: error
          retention-days: 5

### SWIFT LINT

  swiftlint:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install the dependencies specified in Gemfile
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Cache pods
        id: cache-pods
        uses: actions/cache@v2
        env:
          cache-name: framework-pods
        with:
          path: Pods/
          key: cache-${{ env.cache-name }}-${{ hashFiles('Podfile.lock') }}

      - name: Install Pods
        if: steps.cache-pods.outputs.cache-hit != 'true'
        run: bundle exec pod install --deployment

      - name: Lint the framework
        run: Pods/SwiftLint/swiftlint --reporter github-actions-logging --quiet --strict

      - name: Lint Example apps
        env:
          config: ExampleCheckout/.swiftlint.yml
        run: Pods/SwiftLint/swiftlint --config ${{ env.config }} --reporter github-actions-logging --quiet --strict